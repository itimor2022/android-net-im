package com.sk.weichat.fragment;import android.app.Activity;import android.app.Dialog;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.os.Bundle;import android.text.TextUtils;import android.util.Log;import android.view.View;import android.widget.ImageView;import android.widget.TextView;import androidx.lifecycle.Lifecycle;import com.google.android.material.snackbar.BaseTransientBottomBar;import com.j256.ormlite.stmt.query.In;import com.sk.weichat.AppConfig;import com.sk.weichat.AppConstant;import com.sk.weichat.R;import com.sk.weichat.bean.event.MessageEventHongdian;import com.sk.weichat.broadcast.OtherBroadcast;import com.sk.weichat.course.LocalCourseActivity;import com.sk.weichat.event.CertificateEvent;import com.sk.weichat.helper.AvatarHelper;import com.sk.weichat.sp.UserSp;import com.sk.weichat.ui.MainActivity;import com.sk.weichat.ui.base.EasyFragment;import com.sk.weichat.ui.circle.BusinessCircleActivity;import com.sk.weichat.ui.circle.SelectPicPopupWindow;import com.sk.weichat.ui.circle.range.NewZanActivity;import com.sk.weichat.ui.circle.range.SendAudioActivity;import com.sk.weichat.ui.circle.range.SendFileActivity;import com.sk.weichat.ui.circle.range.SendShuoshuoActivity;import com.sk.weichat.ui.circle.range.SendVideoActivity;import com.sk.weichat.ui.dialog.DialogHint;import com.sk.weichat.ui.me.ActivationActivity;import com.sk.weichat.ui.me.ActivationCertificateActivity;import com.sk.weichat.ui.me.AuxiliaryActivity;import com.sk.weichat.ui.me.BasicInfoEditActivity;import com.sk.weichat.ui.me.CertificateActivity;import com.sk.weichat.ui.me.MyCollection;import com.sk.weichat.ui.me.OptionCertificateActivity;import com.sk.weichat.ui.me.SettingActivity;import com.sk.weichat.ui.me.VipActivity;import com.sk.weichat.ui.me.VipLevelActivity;import com.sk.weichat.ui.me.redpacket.MyWalletActivity;import com.sk.weichat.ui.tool.SingleImagePreviewActivity;import com.sk.weichat.util.SkinUtils;import com.sk.weichat.util.ToastUtil;import com.sk.weichat.util.UiUtils;import com.xuan.xuanhttplibrary.okhttp.Api;import com.xuan.xuanhttplibrary.okhttp.HttpUtils;import com.xuan.xuanhttplibrary.okhttp.RxScheduler;import com.xuan.xuanhttplibrary.okhttp.callback.BaseCallback;import com.xuan.xuanhttplibrary.okhttp.result.BaseResult;import com.xuan.xuanhttplibrary.okhttp.result.ObjectResult;import com.xuan.xuanhttplibrary.okhttp.result.response.VipHas;import java.io.IOException;import java.util.HashMap;import java.util.Map;import autodispose2.AutoDispose;import autodispose2.androidx.lifecycle.AndroidLifecycleScopeProvider;import de.greenrobot.event.EventBus;import io.reactivex.rxjava3.functions.Consumer;import okhttp3.Call;import okhttp3.Callback;import okhttp3.Response;public class MeFragment extends EasyFragment implements View.OnClickListener {    private ImageView mAvatarImg;    private TextView mNickNameTv;    private TextView mVipTv;    private TextView mPhoneNumTv;    private TextView tvSignIn;    private TextView mySpaceRl2;    private TextView tvSignTotal;    private BroadcastReceiver mUpdateReceiver = new BroadcastReceiver() {        @Override        public void onReceive(Context context, Intent intent) {            String action = intent.getAction();            if (TextUtils.equals(action, OtherBroadcast.SYNC_SELF_DATE_NOTIFY)) {                updateUI();            }        }    };    private SelectPicPopupWindow menuWindow;    // 为弹出窗口实现监听类    private View.OnClickListener itemsOnClick = new View.OnClickListener() {        public void onClick(View v) {            if (menuWindow != null) {                // 顶部一排按钮复用这个listener, 没有menuWindow,                menuWindow.dismiss();            }            Intent intent = new Intent();            switch (v.getId()) {                case R.id.btn_send_picture:                    // 发表图文，                    intent.setClass(getActivity(), SendShuoshuoActivity.class);                    startActivity(intent);                    break;                case R.id.btn_send_voice:                    // 发表语音                    intent.setClass(getActivity(), SendAudioActivity.class);                    startActivity(intent);                    break;                case R.id.btn_send_video:                    // 发表视频                    intent.setClass(getActivity(), SendVideoActivity.class);                    startActivity(intent);                    break;                case R.id.btn_send_file:                    // 发表文件                    intent.setClass(getActivity(), SendFileActivity.class);                    startActivity(intent);                    break;                case R.id.new_comment:                    // 最新评论&赞                    Intent intent2 = new Intent(getActivity(), NewZanActivity.class);                    intent2.putExtra("OpenALL", true);                    startActivity(intent2);                    EventBus.getDefault().post(new MessageEventHongdian(0));                    break;                default:                    break;            }        }    };    public MeFragment() {    }    @Override    protected int inflateLayoutId() {        return R.layout.fragment_me;    }    @Override    protected void onActivityCreated(Bundle savedInstanceState, boolean createView) {        if (createView) {            initTitleBackground();            initView();            initEvent();        }    }    @Override    public void onResume() {        super.onResume();        updateUI();    }    @Override    public void onDestroy() {        super.onDestroy();        getActivity().unregisterReceiver(mUpdateReceiver);    }    private void initTitleBackground() {        SkinUtils.Skin skin = SkinUtils.getSkin(requireContext());//        findViewById(R.id.tool_bar).setBackgroundColor(skin.getAccentColor());//        findViewById(R.id.rlInfoBackground).setBackgroundColor(skin.getAccentColor());    }    private void initView() {        // 关闭支付功能，隐藏我的钱包        if (!coreManager.getConfig().enablePayModule) {            findViewById(R.id.my_monry).setVisibility(View.GONE);        }        tvSignIn = findViewById(R.id.tv_sign_id);        mAvatarImg = (ImageView) findViewById(R.id.avatar_img);        mNickNameTv = (TextView) findViewById(R.id.nick_name_tv);        mVipTv = (TextView) findViewById(R.id.vip_tv);        tvSignTotal = findViewById(R.id.tv_sign_total);        mPhoneNumTv = (TextView) findViewById(R.id.phone_number_tv);        AvatarHelper.getInstance().displayAvatar(coreManager.getSelf().getNickName(), coreManager.getSelf().getUserId(), mAvatarImg, false);        mNickNameTv.setText(getNicknameText());        mVipTv.setText(getVipText());        tvSignTotal.setText("已签到" + coreManager.getSelf().getSignDayCount() + "天");        IntentFilter intentFilter = new IntentFilter();        intentFilter.addAction(OtherBroadcast.SYNC_SELF_DATE_NOTIFY);        getActivity().registerReceiver(mUpdateReceiver, intentFilter);        boolean b = MainActivity.isActivated2;    }    private String getNicknameText(){        String nickName = coreManager.getSelf().getNickName();        if (TextUtils.isEmpty(nickName)){            return "";        }        if (nickName.length() > 8){            return nickName.substring(0,8) + "...";        }        return nickName;    }    private String getVipText() {        int level = coreManager.getSelf().getCreateRoomLevel();        if (level <= 1) {            return "普通会员";        }//        return "VIP" + level;        return "VIP会员";    }    private void initEvent() {        findViewById(R.id.iv_title_add).setOnClickListener(v -> {            menuWindow = new SelectPicPopupWindow(getActivity(), itemsOnClick);            menuWindow.getContentView().measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);            menuWindow.showAsDropDown(v,                    -(menuWindow.getContentView().getMeasuredWidth() - v.getWidth() / 2 - 40),                    0);        });        String loginUserId = coreManager.getSelf().getUserId();        AvatarHelper.getInstance().displayAvatar(coreManager.getSelf().getNickName(), loginUserId, mAvatarImg, false);        mAvatarImg.setOnClickListener(v -> {            Intent intent = new Intent(getActivity(), SingleImagePreviewActivity.class);            intent.putExtra(AppConstant.EXTRA_IMAGE_URI, coreManager.getSelf().getUserId());            startActivity(intent);        });        findViewById(R.id.my_space_rl2).setOnClickListener(v -> {            startSingIn();        });        findViewById(R.id.info_rl).setOnClickListener(this);        findViewById(R.id.imageView2).setOnClickListener(this);        findViewById(R.id.my_monry).setOnClickListener(this);        findViewById(R.id.my_space_rl).setOnClickListener(this);        findViewById(R.id.my_collection_rl).setOnClickListener(this);        findViewById(R.id.local_course_rl).setOnClickListener(this);        findViewById(R.id.setting_rl).setOnClickListener(this);    }    private void startSingIn() {        AppConfig config = ((MainActivity) requireActivity()).coreManager.getConfig();        HttpUtils.get().url(config.signin).build().execute(new BaseCallback<Integer>(Integer.class) {            @Override            public void onResponse(ObjectResult<Integer> result) {                requireActivity().runOnUiThread(() -> {                    Integer points = result.getData();                    if (result.getResultCode() == 1) {                        ToastUtil.showToast(requireContext(), "签到成功,+" + points);                        tvSignIn.setText("已签到");                        tvSignIn.setEnabled(false);                        coreManager.getSelf().setSignDayCount(coreManager.getSelf().getSignDayCount() + 1);                        tvSignTotal.setText("已签到" + coreManager.getSelf().getSignDayCount() + "天");                    } else {                        tvSignIn.setText("已签到");                        ToastUtil.showToast(requireContext(), result.getResultMsg());                    }                });            }            @Override            public void onError(Call call, Exception e) {                requireActivity().runOnUiThread(() -> ToastUtil.showToast(requireContext(), "签到失败"));            }        });    }    @Override    public void onClick(View v) {        if (!UiUtils.isNormalClick(v)) {            return;        }        int id = v.getId();        switch (id) {            case R.id.info_rl:                // 我的资料                startActivityForResult(new Intent(getActivity(), BasicInfoEditActivity.class), 1);                break;            case R.id.my_monry:                // 我的钱包                MyWalletActivity.start(requireContext());                break;            case R.id.my_space_rl:                // 我的动态                Intent intent = new Intent(getActivity(), BusinessCircleActivity.class);                intent.putExtra(AppConstant.EXTRA_CIRCLE_TYPE, AppConstant.CIRCLE_TYPE_PERSONAL_SPACE);                startActivity(intent);                break;            case R.id.my_collection_rl:                // 我的收藏                Intent intent1 = new Intent(getActivity(), MyCollection.class);//                intent1.putExtra("")                startActivity(intent1);                break;            case R.id.local_course_rl:                // 我的课件                startActivity(new Intent(getActivity(), LocalCourseActivity.class));                break;            case R.id.setting_rl:                // 设置                startActivity(new Intent(getActivity(), SettingActivity.class));                break;            case R.id.imageView2:                menuWindow = new SelectPicPopupWindow(getActivity(), itemsOnClick);                menuWindow.getContentView().measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);                menuWindow.showAsDropDown(v,                        -(menuWindow.getContentView().getMeasuredWidth() - v.getWidth() / 2 - 40),                        0);                break;        }    }    @Override    public void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if (requestCode == 1 || resultCode == Activity.RESULT_OK) {// 个人资料更新了            updateUI();        }    }    /**     * 用户的信息更改的时候，ui更新     */    private void updateUI() {        if (mAvatarImg != null) {            AvatarHelper.getInstance().displayAvatar(coreManager.getSelf().getUserId(), mAvatarImg, true);        }        if (mNickNameTv != null) {            mNickNameTv.setText(getNicknameText());        }        if (mVipTv != null) {            mVipTv.setText(getVipText());        }        tvSignTotal.setText("已签到" + coreManager.getSelf().getSignDayCount() + "天");        if (mPhoneNumTv != null) {            String phoneNumber = coreManager.getSelf().getAccount();            mPhoneNumTv.setText("通讯号：" + phoneNumber);        }        AppConfig config = ((MainActivity) requireActivity()).coreManager.getConfig();        HttpUtils.get().url(config.isSingin).build().execute(new BaseCallback<Boolean>(Boolean.class) {            @Override            public void onResponse(ObjectResult<Boolean> result) {                requireActivity().runOnUiThread(() -> {                    if (result.getData()) {                        tvSignIn.setText("已签到");                        tvSignIn.setClickable(false);                    } else {                        tvSignIn.setText("签到");                        tvSignIn.setClickable(true);                    }                });            }            @Override            public void onError(Call call, Exception e) {            }        });    }}